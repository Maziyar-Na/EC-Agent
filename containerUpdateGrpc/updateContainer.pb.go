// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.4
// source: updateContainer.proto

//package containerUpdate;

package containerUpdate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type ContainerQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId    int32  `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
	NewQuota    uint64 `protobuf:"varint,2,opt,name=newQuota,proto3" json:"newQuota,omitempty"`
	ResizeFlag  string `protobuf:"bytes,3,opt,name=resizeFlag,proto3" json:"resizeFlag,omitempty"` //incr or decr
	SequenceNum int32  `protobuf:"varint,4,opt,name=sequenceNum,proto3" json:"sequenceNum,omitempty"`
}

func (x *ContainerQuotaRequest) Reset() {
	*x = ContainerQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerQuotaRequest) ProtoMessage() {}

func (x *ContainerQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerQuotaRequest.ProtoReflect.Descriptor instead.
func (*ContainerQuotaRequest) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerQuotaRequest) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *ContainerQuotaRequest) GetNewQuota() uint64 {
	if x != nil {
		return x.NewQuota
	}
	return 0
}

func (x *ContainerQuotaRequest) GetResizeFlag() string {
	if x != nil {
		return x.ResizeFlag
	}
	return ""
}

func (x *ContainerQuotaRequest) GetSequenceNum() int32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

// The response message containing the greetings
type ContainerQuotaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId    int32  `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
	UpdateQuota uint64 `protobuf:"varint,2,opt,name=updateQuota,proto3" json:"updateQuota,omitempty"`
	ErrorCode   int32  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	SequenceNum int32  `protobuf:"varint,4,opt,name=sequenceNum,proto3" json:"sequenceNum,omitempty"`
}

func (x *ContainerQuotaReply) Reset() {
	*x = ContainerQuotaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerQuotaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerQuotaReply) ProtoMessage() {}

func (x *ContainerQuotaReply) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerQuotaReply.ProtoReflect.Descriptor instead.
func (*ContainerQuotaReply) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerQuotaReply) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *ContainerQuotaReply) GetUpdateQuota() uint64 {
	if x != nil {
		return x.UpdateQuota
	}
	return 0
}

func (x *ContainerQuotaReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ContainerQuotaReply) GetSequenceNum() int32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

type ResizeMaxMemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId    int32  `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
	NewMemLimit uint64 `protobuf:"varint,2,opt,name=newMemLimit,proto3" json:"newMemLimit,omitempty"`
}

func (x *ResizeMaxMemRequest) Reset() {
	*x = ResizeMaxMemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeMaxMemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeMaxMemRequest) ProtoMessage() {}

func (x *ResizeMaxMemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeMaxMemRequest.ProtoReflect.Descriptor instead.
func (*ResizeMaxMemRequest) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{2}
}

func (x *ResizeMaxMemRequest) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *ResizeMaxMemRequest) GetNewMemLimit() uint64 {
	if x != nil {
		return x.NewMemLimit
	}
	return 0
}

type ResizeMaxMemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId  int32 `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
	ErrorCode int32 `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"` //0 -> resize max mem succeeded
}

func (x *ResizeMaxMemReply) Reset() {
	*x = ResizeMaxMemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResizeMaxMemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResizeMaxMemReply) ProtoMessage() {}

func (x *ResizeMaxMemReply) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResizeMaxMemReply.ProtoReflect.Descriptor instead.
func (*ResizeMaxMemReply) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{3}
}

func (x *ResizeMaxMemReply) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *ResizeMaxMemReply) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type CgroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId int32 `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
}

func (x *CgroupId) Reset() {
	*x = CgroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CgroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CgroupId) ProtoMessage() {}

func (x *CgroupId) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CgroupId.ProtoReflect.Descriptor instead.
func (*CgroupId) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{4}
}

func (x *CgroupId) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

type ReadMemUsageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId int32 `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
	MemUsage int64 `protobuf:"varint,2,opt,name=memUsage,proto3" json:"memUsage,omitempty"`
}

func (x *ReadMemUsageReply) Reset() {
	*x = ReadMemUsageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMemUsageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMemUsageReply) ProtoMessage() {}

func (x *ReadMemUsageReply) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMemUsageReply.ProtoReflect.Descriptor instead.
func (*ReadMemUsageReply) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{5}
}

func (x *ReadMemUsageReply) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *ReadMemUsageReply) GetMemUsage() int64 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

type ReadMemLimitReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CgroupId int32 `protobuf:"varint,1,opt,name=cgroupId,proto3" json:"cgroupId,omitempty"`
	MemLimit int64 `protobuf:"varint,3,opt,name=memLimit,proto3" json:"memLimit,omitempty"`
}

func (x *ReadMemLimitReply) Reset() {
	*x = ReadMemLimitReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateContainer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMemLimitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMemLimitReply) ProtoMessage() {}

func (x *ReadMemLimitReply) ProtoReflect() protoreflect.Message {
	mi := &file_updateContainer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMemLimitReply.ProtoReflect.Descriptor instead.
func (*ReadMemLimitReply) Descriptor() ([]byte, []int) {
	return file_updateContainer_proto_rawDescGZIP(), []int{6}
}

func (x *ReadMemLimitReply) GetCgroupId() int32 {
	if x != nil {
		return x.CgroupId
	}
	return 0
}

func (x *ReadMemLimitReply) GetMemLimit() int64 {
	if x != nil {
		return x.MemLimit
	}
	return 0
}

var File_updateContainer_proto protoreflect.FileDescriptor

var file_updateContainer_proto_rawDesc = []byte{
	0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x65, 0x63, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x53, 0x0a, 0x13, 0x52, 0x65, 0x73,
	0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4d,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x26, 0x0a,
	0x08, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x32,
	0xb3, 0x03, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x65,
	0x63, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x63,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x12, 0x2b, 0x2e,
	0x65, 0x63, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78,
	0x4d, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x63, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x78, 0x4d, 0x65, 0x6d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x29, 0x2e, 0x65, 0x63, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x2e, 0x65, 0x63, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x29, 0x2e, 0x65, 0x63, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x2e, 0x2f, 0x65, 0x63, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_updateContainer_proto_rawDescOnce sync.Once
	file_updateContainer_proto_rawDescData = file_updateContainer_proto_rawDesc
)

func file_updateContainer_proto_rawDescGZIP() []byte {
	file_updateContainer_proto_rawDescOnce.Do(func() {
		file_updateContainer_proto_rawDescData = protoimpl.X.CompressGZIP(file_updateContainer_proto_rawDescData)
	})
	return file_updateContainer_proto_rawDescData
}

var file_updateContainer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_updateContainer_proto_goTypes = []interface{}{
	(*ContainerQuotaRequest)(nil), // 0: ec.rpc.containerUpdate.ContainerQuotaRequest
	(*ContainerQuotaReply)(nil),   // 1: ec.rpc.containerUpdate.ContainerQuotaReply
	(*ResizeMaxMemRequest)(nil),   // 2: ec.rpc.containerUpdate.ResizeMaxMemRequest
	(*ResizeMaxMemReply)(nil),     // 3: ec.rpc.containerUpdate.ResizeMaxMemReply
	(*CgroupId)(nil),              // 4: ec.rpc.containerUpdate.CgroupId
	(*ReadMemUsageReply)(nil),     // 5: ec.rpc.containerUpdate.ReadMemUsageReply
	(*ReadMemLimitReply)(nil),     // 6: ec.rpc.containerUpdate.ReadMemLimitReply
}
var file_updateContainer_proto_depIdxs = []int32{
	0, // 0: ec.rpc.containerUpdate.ContainerUpdateHandler.ReqQuotaUpdate:input_type -> ec.rpc.containerUpdate.ContainerQuotaRequest
	2, // 1: ec.rpc.containerUpdate.ContainerUpdateHandler.ReqResizeMaxMem:input_type -> ec.rpc.containerUpdate.ResizeMaxMemRequest
	4, // 2: ec.rpc.containerUpdate.ContainerUpdateHandler.ReadMemUsage:input_type -> ec.rpc.containerUpdate.CgroupId
	4, // 3: ec.rpc.containerUpdate.ContainerUpdateHandler.ReadMemLimit:input_type -> ec.rpc.containerUpdate.CgroupId
	1, // 4: ec.rpc.containerUpdate.ContainerUpdateHandler.ReqQuotaUpdate:output_type -> ec.rpc.containerUpdate.ContainerQuotaReply
	3, // 5: ec.rpc.containerUpdate.ContainerUpdateHandler.ReqResizeMaxMem:output_type -> ec.rpc.containerUpdate.ResizeMaxMemReply
	5, // 6: ec.rpc.containerUpdate.ContainerUpdateHandler.ReadMemUsage:output_type -> ec.rpc.containerUpdate.ReadMemUsageReply
	6, // 7: ec.rpc.containerUpdate.ContainerUpdateHandler.ReadMemLimit:output_type -> ec.rpc.containerUpdate.ReadMemLimitReply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_updateContainer_proto_init() }
func file_updateContainer_proto_init() {
	if File_updateContainer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_updateContainer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateContainer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerQuotaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateContainer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeMaxMemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateContainer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResizeMaxMemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateContainer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CgroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateContainer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMemUsageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateContainer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMemLimitReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_updateContainer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_updateContainer_proto_goTypes,
		DependencyIndexes: file_updateContainer_proto_depIdxs,
		MessageInfos:      file_updateContainer_proto_msgTypes,
	}.Build()
	File_updateContainer_proto = out.File
	file_updateContainer_proto_rawDesc = nil
	file_updateContainer_proto_goTypes = nil
	file_updateContainer_proto_depIdxs = nil
}
